name: Portal Jabar Release Production

on:
  release:
    types: [created]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

        # Configure Docker with Credentials
      - name: Configure Docker
        run: |
          docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} -p '${{ secrets.REGISTRY_PASSWORD }}'

        # Set version tag using Release Tag
      - name: Get release tag
        id: vars
        run: echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

        # Build the Docker image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.SERVICE_IMAGENAME }}:${{ env.RELEASE_TAG }}
          build-args: |
            APP_ENVIRONMENT=production
            NUXT_ENV_PUBLIC_URL=${{ secrets.NUXT_ENV_PUBLIC_URL }}
            API_URL=${{ secrets.API_URL }}
            SENTRY_ENABLED=${{ secrets.SENTRY_ENABLED }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            SENTRY_SAMPLE_RATE=${{ secrets.SENTRY_SAMPLE_RATE }}
            GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}
      
        # GitOps
      - name: GitOps ArgoCD Setup
        run: |
          echo "${{ secrets.GITLAB_ARGOCD_KEY }}" > /tmp/gitlab-deploy-ssh-key
          chmod 600 /tmp/gitlab-deploy-ssh-key
          export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
          git clone ${{ secrets.GITLAB_ARGOCD_REPOSITORY }}
      - name: GitOps ArgoCD Update Image Tag
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.template.spec.containers[0].image = "${{ secrets.SERVICE_IMAGENAME }}:${{ env.RELEASE_TAG }}"' 'jds-terraform-gke/k8s/portal-jabar-web/production-jcloud/deployment.yaml'

      - name: GitOps ArgoCD Create Branch, Commit, Push
        run: |
          export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
          cd jds-terraform-gke/k8s/portal-jabar-web/production-jcloud
          git config user.email "github-action@github.com"
          git config user.name "Github Action"
          git checkout -b portal-jabar-web-release-production
          git add deployment.yaml
          git commit -m "Portal Jabar Web Release to Production"
          git push origin portal-jabar-web-release-production -o merge_request.description="# Overview \n\n - Portal Jabar Web release to production \n\n ## Evidence \n\n - title: Portal Jabar Web release to production \n - project: Portal Jabar \n - participants:  " -o merge_request.create



